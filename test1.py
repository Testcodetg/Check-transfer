import streamlit as st
import pyodbc
import pandas as pd

st.set_page_config(page_title="SQL Server Connection Tester", page_icon="üß™", layout="centered")
st.title("üß™ SQL Server Connection Tester (Streamlit)")

st.caption("‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ SQL Server ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î **‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠**")

# --- ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ ---
with st.form("conn_form", clear_on_submit=False):
    col1, col2 = st.columns(2)
    with col1:
        server = st.text_input("Server", placeholder="‡πÄ‡∏ä‡πà‡∏ô TG\\MSSQL2017 ‡∏´‡∏£‡∏∑‡∏≠ 10.0.0.5,1433")
        database = st.text_input("Database", placeholder="‡πÄ‡∏ä‡πà‡∏ô Cyberhm")
    with col2:
        uid = st.text_input("User (UID)", placeholder="‡πÄ‡∏ä‡πà‡∏ô sa")
        pwd = st.text_input("Password (PWD)", type="password")

    # ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Driver + option
    adv = st.expander("‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á", expanded=False)
    with adv:
        driver = st.selectbox(
            "ODBC Driver",
            options=[
                "Driver 18 for SQL Server",
                "ODBC Driver 17 for SQL Server",
                "SQL Server",  # ‡πÄ‡∏Å‡πà‡∏≤‡∏°‡∏≤‡∏Å ‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∑‡πà‡∏ô
            ],
            index=0
        )
        timeout = st.number_input("Connection Timeout (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)", min_value=1, max_value=60, value=5)
        trust_cert = st.checkbox("Trust Server Certificate (‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ TLS ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô)", value=True)

    test_btn = st.form_submit_button("‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠")

def build_conn_str(server, database, uid, pwd, driver, timeout, trust_cert=True):
    parts = [
        f"DRIVER={{{{{{driver}}}}}}",
        f"SERVER={server}",
        f"DATABASE={database}",
        f"UID={uid}",
        f"PWD={pwd}",
        f"Connection Timeout={timeout}",
    ]
    # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Driver 18/17 ‡∏°‡∏±‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ TLS; ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ô‡∏µ‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á
    if trust_cert:
        parts.append("TrustServerCertificate=yes")
    return ";".join(parts)

def try_connect(conn_str: str):
    conn = None
    try:
        conn = pyodbc.connect(conn_str)
        return True, conn, None
    except Exception as e:
        return False, None, str(e)

def probe_info(conn):
    try:
        q = "SELECT @@VERSION AS [Version], DB_NAME() AS [DatabaseName]"
        df = pd.read_sql(q, conn)
        return df
    except Exception as e:
        return pd.DataFrame({"error": [str(e)]})

if test_btn:
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á
    missing = []
    if not server: missing.append("Server")
    if not database: missing.append("Database")
    if not uid: missing.append("User (UID)")
    if not pwd: missing.append("Password (PWD)")
    if missing:
        st.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å: " + ", ".join(missing))
    else:
        conn_str = build_conn_str(server, database, uid, pwd, driver, timeout, trust_cert)
        with st.status("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠...", expanded=True) as status:
            st.write("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏î‡πâ‡∏ß‡∏¢ ODBC:", driver)
            ok, conn, err = try_connect(conn_str)
            if ok:
                status.update(label="‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ", state="complete")
                st.success("‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                info_df = probe_info(conn)
                st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå/‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
                st.dataframe(info_df, use_container_width=True)

                # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
                st.divider()
                st.subheader("‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≤‡∏£‡∏≤‡∏á (Top 50)")
                try:
                    tables = pd.read_sql(
                        """
                        SELECT TOP 50
                            *
                        FROM PNT_person
                        """,
                        conn
                    )
                    st.dataframe(tables, use_container_width=True)
                except Exception as e:
                    st.info(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÑ‡∏î‡πâ: {e}")

                # ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏•‡∏≠‡∏á‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL
                st.divider()
                st.subheader("‡∏•‡∏≠‡∏á‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL (‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)")
                sql = st.text_area("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL", value="SELECT TOP 10 name, object_id FROM sys.objects ORDER BY name")
                if st.button("‡∏£‡∏±‡∏ô SQL"):
                    try:
                        df_sql = pd.read_sql(sql, conn)
                        st.dataframe(df_sql, use_container_width=True)
                    except Exception as e:
                        st.error(f"‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")

                conn.close()
            else:
                status.update(label="‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‚ùå", state="error")
                st.error("‚ùå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                with st.expander("‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î"):
                    st.code(err)
                st.markdown(
                    "- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö **Server/Port/Instance** (‡πÄ‡∏ä‡πà‡∏ô `HOST,1433` ‡∏´‡∏£‡∏∑‡∏≠ `HOST\\INSTANCE`)\n"
                    "- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏£‡πå‡∏ß‡∏≠‡∏•‡∏•‡πå‡∏û‡∏≠‡∏£‡πå‡∏ï 1433 ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï Remote\n"
                    "- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (SQL Authentication) ‡πÅ‡∏•‡∏∞‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á\n"
                    "- ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠ TLS/SSL ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î **Trust Server Certificate** ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ Driver 18/17"
                )

st.caption("‡∏Ç‡πâ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢: ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏õ‡∏£‡∏î‡∏±‡∏Å‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏ß‡πâ‡πÉ‡∏ô `st.secrets` ‡∏´‡∏£‡∏∑‡∏≠ environment variables ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡∏•‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠")
